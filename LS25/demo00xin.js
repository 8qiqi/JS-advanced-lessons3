//事件流：描述的是从页面中接受事件的顺序  (点了一个按钮，也认为点了按钮的容器)
//事件冒泡：从小到大     事件捕获：从大到小

//JS时间响应处理的三种方式
//(1)HTML：事件直接加在HTML结构里  缺点：HTML和JS代码紧密的耦合在一起，JS 代码和HTML都需要修改
//(2)DOM0级：把一个函数赋值给一个事件的处理程序属性 优点：简单、跨浏览器
//(3)DOM2级：定义了两个方法，用于处理指定和删除事件处理程序的操作  *****事件去掉“on” ****
//addEventListener() removeEventListener() 接受三个参数，要处理的事件名、作为事件处理程序的函数、布尔值。true表示在捕获阶段调用事件处理程序、false表示在冒泡阶段调用时间处理程序

//DOM0 和 DOM2 可以添加多个事件处理程序

//IE事件处理程序
//attachEvent()添加事件   detachEvent()删除事件   **** 事件加上“on” *****    接收两个参数：事件处理程序的名称和事件处理程序的函数

//事件对象：在触发DOM上的事件时都会产生一个对象
//事件对象event
//1、DOM中的事件对象
//（1）type属性 用于获取事件类型
// (2)target属性 用于获取事件目标
// (3)stopPropagation()方法 用于阻止事件冒泡
// (4)preventDefault()方法 阻止事件的默认行为
//2、IE中的事件对象
//（1）type属性 用于获取事件类型
// (2)srcElement属性 用于获取事件的目标
// (3)cancelBubble属性 用于阻止事件冒泡 true表示阻止冒泡 false表示不阻止冒泡
// (4)returnValue属性 阻止事件的默认行为  false表示阻止事件的默认行为

